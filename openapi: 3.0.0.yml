openapi: 3.0.0
info:
  title: ENVb API
  version: 1.0.0
  description: >-
    API Envelop Budget - для использования конвертного метода ведения бюджета.
    API позволяет получить доступ к конвертам пользователя, информации о доходах
    и расходах пользователя проходящие ежемесячно через эти конверты для каждой
    из категорий трат.
servers:
  - url: http://localhost:3000
paths:
  /api/v1/envelopes:
    summary: данные о конвертах
    get:
      summary: получить массив содержащий все конверты
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Envelope'
      tags:
        - envelopes
    post:
      summary: добавить новый конверт
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                budget:
                  type: number
                  format: double
                categoryID:
                  type: string
                userID:
                  type: string
                name:
                  type: string
      responses:
        '201':
          description: конверт добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope'
        '400':
          description: >-
            Bad request. Отсутсвутет одно из полей тела запроса или указаны
            несуществующие categoryID или userID, а так же отрицательный budget
      tags:
        - envelopes
  /api/v1/envelopes/{envelopeId}:
    summary: операции над конкретными конвертами
    parameters:
      - in: path
        name: envelopeId
        schema:
          type: string
          format: UUID
        required: true
        description: Id конкретного конверта
    get:
      summary: получить конкретный конверт
      responses:
        '200':
          description: конкретный конверт по ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope'
        '404':
          description: Not Found
      tags:
        - envelope
    put:
      summary: внести изиенения в конкретный конверт
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - budget
                - categoryID
                - userID
                - name
              properties:
                budget:
                  type: number
                  format: double
                categoryID:
                  type: string
                userID:
                  type: string
                name:
                  type: string
                changeBudget:
                  type: number
                  format: double
      responses:
        '200':
          description: конкретный конверт по ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope'
        '400':
          description: >-
            отсутствуют необходимые поля или неверный формат, например,
            отрицательный бюджет
        '404':
          description: Not found. попытка обновления несуществующего конверта
      tags:
        - envelope
    delete:
      summary: удалить конверт
      responses:
        '204':
          description: конверт удален
        '404':
          description: Not found. Попытка удаления несуществующего конверта
      tags:
        - envelope
  /api/v1/users/{userId}:
    summary: данные пользователя
    parameters:
      - in: path
        name: userId
        schema:
          type: string
          format: UUID
        required: true
        description: Id конкретного пользователя
    get:
      summary: получить данные пользователя
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Получение данных несуществующего пользователя
      tags:
        - user
  /api/v1/categories:
    summary: категории
    get:
      summary: получить списко всех категорий трат
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
      tags:
        - category
  /api/v1/categories/{categoryId}:
    parameters:
      - in: path
        name: categoryId
        schema:
          type: number
        required: true
        description: Id конкретной категории
    get:
      summary: получить категорию по ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Получение данных несуществующей категории
      tags:
        - category
components:
  schemas:
    Envelope:
      description: конверты для хранения денег предназначенных для конкретных трат
      type: object
      required:
        - id
        - budget
        - categoryID
        - userID
      properties:
        id:
          description: UUID уникальный номер конверта
          type: string
          format: UUID
        budget:
          description: Сумма распределения для конверта
          type: number
          format: double
          minimum: 0
        categoryID:
          description: Категория трат
          type: string
          format: int32
        userID:
          description: id пользователя которому пренадлежит данный конверт
          type: string
          format: UUID
        name:
          description: название или коротка заметка о конверте
          type: string
    User:
      type: object
      required:
        - id
        - income
      properties:
        id:
          description: уникальный UUID номер пользователя
          type: string
          format: UUID
        income:
          description: сумма дохода
          type: number
          format: double

    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          description: уникальный ID категории
          type: number
        name:
          description: название категории
          type: string
        isYearly:
          description: категори относится к ежегодным разовым расходам?
          type: boolean
          default: false